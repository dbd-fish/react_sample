name: eslint, prettier

on:
  pull_request:
  workflow_dispatch:

jobs:
  eslint_and_prettier:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add Docker Official GPG Key and Repository
        run: |
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

      - name: Install Docker Compose Plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin

      # Docker システムのプルーニング
      - name: Clean Docker system
        run: docker system prune -af

      # メモリ使用量の確認
      - name: Check available memory
        run: free -h

      # Dockerコンテナの起動時にメモリ制限を設定
      - name: Set up frontend Container with memory limits
        run: |
          docker compose up -d --build frontend
          docker update --memory 8G --memory-swap 8G sample_frontend_container

      - name: Wait for container to be ready
        run: |
          sleep 30
          docker ps

      - name: Run eslint in frontend Container
        run: |
          docker exec sample_frontend_container bash -c "cd sample_remix_react && export NODE_OPTIONS='--max-old-space-size=4096' && npm run lint"
        # sample_remix_react ディレクトリに移動してから lint を実行

      - name: Run prettier in frontend Container
        run: |
          docker exec sample_frontend_container bash -c "cd sample_remix_react && npm run format"
        # sample_remix_react ディレクトリに移動してから format を実行
